{
	"info": {
		"_postman_id": "2c12db20-f4d3-49af-83f8-3d09efb9cca1",
		"name": "Reqres Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17571816",
		"_collection_link": "https://interstellar-shuttle-350302.postman.co/workspace/Team-Workspace~6c59cf75-c61b-4fd2-8960-7d57e6356dee/collection/17571816-2c12db20-f4d3-49af-83f8-3d09efb9cca1?action=share&source=collection_link&creator=17571816"
	},
	"item": [
		{
			"name": "List Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Authentication and authorization\", function () {\r",
							"    var authToken = pm.environment.get(\"authToken\");\r",
							"    pm.request.headers.add({ key: \"Authorization\", value: \"Bearer \" + authToken });\r",
							"    pm.sendRequest(function (response) {\r",
							"        pm.expect(response.json().authorized).to.be.true;\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "QpwL5tke4Pnpja7X4",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}api/users?page=2",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"token\");\r",
							"});\r",
							"\r",
							"pm.test(\"Authentication and authorization\", function () {\r",
							"    var authToken = pm.environment.get(\"authToken\");\r",
							"    pm.request.headers.add({ key: \"Authorization\", value: \"Bearer \" + authToken });\r",
							"    pm.sendRequest(function (response) {\r",
							"        pm.expect(response.json().authorized).to.be.true;\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}api/login",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delayed Response",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Authentication and authorization\", function () {\r",
							"    var authToken = pm.environment.get(\"authToken\");\r",
							"    pm.request.headers.add({ key: \"Authorization\", value: \"Bearer \" + authToken });\r",
							"    pm.sendRequest(function (response) {\r",
							"        pm.expect(response.json().authorized).to.be.true;\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"email\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"        pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "QpwL5tke4Pnpja7X4",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_URL}}api/users?delay=3",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "delay",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Authentication and authorization\", function () {\r",
							"    var authToken = pm.environment.get(\"authToken\");\r",
							"    pm.request.headers.add({ key: \"Authorization\", value: \"Bearer \" + authToken });\r",
							"    pm.sendRequest(function (response) {\r",
							"        pm.expect(response.json().authorized).to.be.true;\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"Response body is empty\", function () { \r",
							"pm.expect(pm.response.text()).to.be.empty; \r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "QpwL5tke4Pnpja7X4",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_URL}}api/users/2",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Authentication and authorization\", function () {\r",
							"    var authToken = pm.environment.get(\"authToken\");\r",
							"    pm.request.headers.add({ key: \"Authorization\", value: \"Bearer \" + authToken });\r",
							"    pm.sendRequest(function (response) {\r",
							"        pm.expect(response.json().authorized).to.be.true;\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"updatedAt\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "QpwL5tke4Pnpja7X4",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}api/users/2",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Unsuccessful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"error\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"peter@klaven\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}api/login",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Base_URL",
			"value": "https://reqres.in/",
			"type": "string"
		},
		{
			"key": "Token",
			"value": "QpwL5tke4Pnpja7X4",
			"type": "string"
		}
	]
}